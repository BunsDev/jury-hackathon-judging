use jury::util;
use jury::util::crowd_bt;

#[test]
fn math_test() {
    let (a, b, c, d, e, f) = crowd_bt::update(20.0, 12.2, 4.2, 1.0, 3.11, 0.65);
    assert_eq!(a, 20.29342378562617);
    assert_eq!(b, 12.144888310192417);
    assert_eq!(c, 4.28143039999674);
    assert_eq!(d, 0.9529174440716865);
    assert_eq!(e, 3.057070240002119);
    assert_eq!(f, 0.6301076201202875);
}

#[test]
fn diagamma_test() {
    let tests : [[f64; 2]; 11] = [
        [1.0E+00, -0.5772156649E+00],
        [1.1E+00, -0.4237549404E+00],
        [1.2E+00, -0.2890398965E+00],
        [1.3E+00, -0.1691908888E+00],
        [1.4E+00, -0.6138454458E-01],
        [1.5E+00, 0.3648997397E-01],
        [1.6E+00, 0.1260474527E+00],
        [1.7E+00, 0.2085478748E+00],
        [1.8E+00, 0.2849914332E+00],
        [1.9E+00, 0.3561841611E+00],
        [2.0E+00, 0.4227843350E+00],
    ];

    for i in 0..11 {
        let res = util::digamma::psi(tests[i][0]);
        assert!(res - tests[i][1] < 1.0E-10);
    }
}
